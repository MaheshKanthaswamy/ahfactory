// Generated by IcedCoffeeScript 108.0.11
(function() {
  var $, changeTitle, openPopup;

  $ = jQuery;

  changeTitle = function(a, e, fn) {
    var elm, text, title;
    elm = e.sender.element;
    if (elm.children().length > 0) {
      title = $(elm).find("h1, h2, h3, h4, h5").first();
      text = title.text();
      if (!text) {
        text = a.text();
      }
      elm.data("kendoWindow").title(text).center();
      title.remove();
      if (fn) {
        return fn(e);
      }
    } else {
      return setTimeout((function() {
        return changeTitle(a, e, fn);
      }), 200);
    }
  };

  openPopup = function() {
    var a, href, onclose, onopen;
    a = $(this);
    href = a.attr("href");
    onclose = a.attr("data-popup-on-close");
    onopen = a.attr("data-popup-on-open");
    $("<div>").appendTo("body").kendoWindow({
      content: href,
      minWidth: "65%",
      modal: true,
      activate: function(e) {
        return changeTitle(a, e, window[onopen]);
      },
      deactivate: function(e) {
        var fn;
        this.destroy();
        fn = window[onclose];
        if (fn) {
          return fn(e);
        }
      }
    });
    return false;
  };

  $.fn.addOpenPopupEvents = function() {
    return this.find("a[data-popup]").click(openPopup);
  };

  $(function() {
    return $(document.body).addOpenPopupEvents();
  });

}).call(this);

(function(){var n,t,i;n=jQuery;t=function(i,r,u){var f,e,o;if(f=r.sender.element,f.children().length>0){if(o=n(f).find("h1, h2, h3, h4, h5").first(),e=o.text(),e||(e=i.text()),f.data("kendoWindow").title(e).center(),o.remove(),u)return u(r)}else return setTimeout(function(){return t(i,r,u)},200)};i=function(){var i,r,u,f;return i=n(this),r=i.attr("href"),u=i.attr("data-popup-on-close"),f=i.attr("data-popup-on-open"),n("<div>").appendTo("body").kendoWindow({content:r,minWidth:"65%",modal:!0,activate:function(n){return t(i,n,window[f])},deactivate:function(n){var t;return this.destroy(),t=window[u],t?t(n):void 0}}),!1};n.fn.addOpenPopupEvents=function(){return this.find("a[data-popup]").click(i)};n(function(){return n(document.body).addOpenPopupEvents()})}).call(this);
// Generated by IcedCoffeeScript 108.0.11
(function() {
  var $,
    __slice = [].slice;

  $ = jQuery;

  $.fn.extend({
    updateImage: function(options) {
      var log, send, sendXHR1, sendXHR2, settings;
      settings = {
        url: 'UpdateImage',
        debug: false
      };
      settings = $.extend(settings, options);
      log = function() {
        var msg;
        msg = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (settings.debug) {
          return typeof console !== "undefined" && console !== null ? console.log.apply(console, msg) : void 0;
        }
      };
      send = function() {
        if (FormData) {
          log("envoie via XHR2");
          return sendXHR2;
        } else {
          log("envoie via XHR1");
          return sendXHR1;
        }
      };
      sendXHR2 = function() {
        var $img;
        $img = $(this);
        return $("<input>").attr("type", "file").click().change(function() {
          var formData, request;
          $img.css("opacity", "0.5");
          formData = new FormData();
          formData.append("image", this.files[0]);
          request = new XMLHttpRequest();
          request.open("POST", settings.url);
          request.onreadystatechange = function() {
            var src;
            if (request.readyState === 4 && request.status === 200) {
              src = $img.attr("src");
              src += src.indexOf("?") > 0 ? "&" : "?";
              src += "time=" + new Date().getTime();
              $img.attr("src", src);
              return setTimeout((function() {
                return $img.css("opacity", "1");
              }), 600);
            }
          };
          return request.send(formData);
        });
      };
      sendXHR1 = function() {
        var $file, $form;
        log("création du formulaire");
        $form = $("<form>").attr("action", settings.url).attr("method", "post").attr("enctype", "multipart/form-data").css("display", "none");
        log("création de l'input type file");
        $file = $("<input>").attr("type", "file").attr("name", "image").appendTo($form);
        log("add change action to input");
        $file.change(function() {
          return $form.submit();
        });
        $("body").append($form);
        return $file.click();
      };
      return this.each(function() {
        var $img;
        $img = $(this);
        log("add click action to", $img);
        return $img.css("cursor", "pointer").click(send());
      });
    }
  });

}).call(this);

(function(){var n,t=[].slice;n=jQuery;n.fn.extend({updateImage:function(i){var r,f,e,o,u;return u={url:"UpdateImage",debug:!1},u=n.extend(u,i),r=function(){var n;return n=1<=arguments.length?t.call(arguments,0):[],u.debug?typeof console!="undefined"&&console!==null?console.log.apply(console,n):void 0:void 0},f=function(){return FormData?(r("envoie via XHR2"),o):(r("envoie via XHR1"),e)},o=function(){var t;return t=n(this),n("<input>").attr("type","file").click().change(function(){var i,n;return t.css("opacity","0.5"),i=new FormData,i.append("image",this.files[0]),n=new XMLHttpRequest,n.open("POST",u.url),n.onreadystatechange=function(){var i;if(n.readyState===4&&n.status===200)return i=t.attr("src"),i+=i.indexOf("?")>0?"&":"?",i+="time="+(new Date).getTime(),t.attr("src",i),setTimeout(function(){return t.css("opacity","1")},600)},n.send(i)})},e=function(){var i,t;return r("création du formulaire"),t=n("<form>").attr("action",u.url).attr("method","post").attr("enctype","multipart/form-data").css("display","none"),r("création de l'input type file"),i=n("<input>").attr("type","file").attr("name","image").appendTo(t),r("add change action to input"),i.change(function(){return t.submit()}),n("body").append(t),i.click()},this.each(function(){var t;return t=n(this),r("add click action to",t),t.css("cursor","pointer").click(f())})}})}).call(this);
// Generated by IcedCoffeeScript 108.0.11
(function() {
  this.kendoGetTemplate = function(field, data) {
    var obj, template;
    template = "";
    $(".k-grid").each(function(k, grid) {
      var columns;
      columns = $(grid).data("kendoGrid").columns;
      return $.each(columns, function(k, col) {
        if (col.field === field) {
          return template = col.template;
        }
      });
    });
    template = kendo.template(template);
    if (!data) {
      return template;
    } else {
      obj = {
        data: {}
      };
      obj.data[field] = data;
      return template(obj);
    }
  };

}).call(this);

(function(){this.kendoGetTemplate=function(n,t){var r,i;return i="",$(".k-grid").each(function(t,r){var u;return u=$(r).data("kendoGrid").columns,$.each(u,function(t,r){if(r.field===n)return i=r.template})}),i=kendo.template(i),t?(r={data:{}},r.data[n]=t,i(r)):i}}).call(this);
// Generated by IcedCoffeeScript 108.0.11
(function() {
  this.kendoGetTitle = function(field) {
    var title;
    title = field;
    $(".k-grid").each(function(k, grid) {
      var columns;
      columns = $(grid).data("kendoGrid").columns;
      return $.each(columns, function(k, col) {
        if (col.field === field) {
          return title = col.title;
        }
      });
    });
    return title;
  };

}).call(this);

(function(){this.kendoGetTitle=function(n){var t;return t=n,$(".k-grid").each(function(i,r){var u;return u=$(r).data("kendoGrid").columns,$.each(u,function(i,r){if(r.field===n)return t=r.title})}),t}}).call(this);
// Generated by IcedCoffeeScript 108.0.11
(function() {
  this.renderMultiSelectText = function(selectListArray, attribute, char) {
    var displayText;
    if (attribute == null) {
      attribute = 'Text';
    }
    if (char == null) {
      char = ', ';
    }
    displayText = '';
    if (selectListArray && selectListArray[0]) {
      $.each(selectListArray, function(k, v) {
        return displayText += v[attribute] + char;
      });
      displayText = displayText.slice(0, -2);
    }
    return displayText;
  };

}).call(this);

(function(){this.renderMultiSelectText=function(n,t,i){var r;return t==null&&(t="Text"),i==null&&(i=", "),r="",n&&n[0]&&($.each(n,function(n,u){return r+=u[t]+i}),r=r.slice(0,-2)),r}}).call(this);
// Generated by IcedCoffeeScript 108.0.11
(function() {
  $.fn.serializeObject = function() {
    var obj;
    obj = {};
    $(this).find('select, textarea, input').each(function() {
      return obj[$(this).attr('name')] = $(this).val();
    });
    $(this).find("input[type=checkbox]").each(function() {
      obj[$(this).attr('name')] = null;
      if ($(this).is(':visible')) {
        return obj[$(this).attr('name')] = $(this).is(':checked');
      }
    });
    $(this).find('input[type=radio]').each(function() {
      var val;
      val = $('input[type=radio][name="' + $(this).attr('name') + '"]:checked').val();
      if (!val) {
        val = $('input[type=radio][name="' + $(this).attr('name') + '"][checked]').val();
      }
      return obj[$(this).attr('name')] = val;
    });
    return obj;
  };

}).call(this);

(function(){$.fn.serializeObject=function(){var n;return n={},$(this).find("select, textarea, input").each(function(){return n[$(this).attr("name")]=$(this).val()}),$(this).find("input[type=checkbox]").each(function(){return n[$(this).attr("name")]=null,$(this).is(":visible")?n[$(this).attr("name")]=$(this).is(":checked"):void 0}),$(this).find("input[type=radio]").each(function(){var t;return t=$('input[type=radio][name="'+$(this).attr("name")+'"]:checked').val(),t||(t=$('input[type=radio][name="'+$(this).attr("name")+'"][checked]').val()),n[$(this).attr("name")]=t}),n}}).call(this);