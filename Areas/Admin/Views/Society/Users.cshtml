@model Guid

@{
    var id = Html.RandomID();
    var ALLOWED = Ftel.Domain.DomainModel.MembershipUser.Statut.ALLOWED;
    var INPROGRESS = Ftel.Domain.DomainModel.MembershipUser.Statut.INPROGRESS;
    var REFUSED = Ftel.Domain.DomainModel.MembershipUser.Statut.REFUSED;

    var ReturnURL = Url.Action("SocietyInfos", "Society", new { Id = Model });
    var isadmin = RoleHelper.IsAdminData || RoleHelper.IsAdminTech;
}

<div class="row">
    <div class="small-12 column">
        <h3>@Html.Lang("users")</h3>

        @if (isadmin)
        {
            <a class="button alert" href="@Url.Action("RefuseAllUsers", "Society", new { area = "Admin", Id = Model })"><i class="fa fa-times"></i> @Html.Lang("refuse.all.society.users")</a>
            <a class="button success" href="@Url.Action("AcceptAllUsers", "Society", new { area = "Admin", Id = Model })"><i class="fa fa-check"></i> @Html.Lang("accept.all.society.users")</a>
        }

        @(Html.Kendo().Grid<SocietyUserModel>()
            .Name("grid_" + id)
            .HtmlAttributes(new { @class = "logs-table" })
            .Columns(columns =>
            {
                columns.Bound(e => e.Name).ClientTemplate("<a href='" + Url.Action("Infos", "User", new { area = "Admin" }) + "/#:Id#'>#:Name#</a>");
                columns.Bound(e => e.LastActivityDate).Format("{0:dd/MM/yy HH:mm}");
                columns.Bound(e => e.TypeStatut);

                if (isadmin)
                {
                    columns.Bound(x => x).Title("Actions").Width(148).HtmlAttributes(new { @class = "text-right" }).ClientTemplate(
                        "# if (Statut === parseInt('" + (int)ALLOWED + "')) { # <a class='button alert no-mar-bottom' href='" + Url.Action("Refuse", "User", new { area = "Admin" }) + "?id=#: Id #&ReturnURL=" + ReturnURL + "'><i class='fa fa-times'></i> " + LangHelper.Translate("refuse") + "</a> # } # " +
                        "# if (Statut === parseInt('" + (int)REFUSED + "')) { # <a class='button success no-mar-bottom' href='" + Url.Action("Accept", "User", new { area = "Admin" }) + "?id=#: Id #&ReturnURL=" + ReturnURL + "'><i class='fa fa-check'></i> " + LangHelper.Translate("accept") + "</a> # } # "
                    );
                }
            })
            .DataSource(
                dataSource => dataSource
                .Ajax()
                .Read(r => r.Action("ReadUsers", "Society", new { area = "Admin", id = Model }))
            )
            .Filterable()
            .Sortable()
            .Events(e => e.DataBound("databound_" + id))
        )

    </div>
</div>

<script type="text/javascript">
    function databound_@(id)(e) {
        var grid = e.sender;
        grid.tbody.find("tr.k-grouping-row").each(function (index) {
            grid.collapseGroup(this);
        });
    }
</script>