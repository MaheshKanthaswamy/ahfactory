@model UserGridModel
@{
    var id = Html.RandomID();
    var tmpl_id = Html.RandomID();
}
<div class="row">
    <div class="columns large-12">
    @(Html.Kendo().Grid<UserGridModel>()
        .Name(id)
        .HtmlAttributes(new { @class = "black-grid medium-sized" })
        .Columns(columns =>
        {
            columns.Bound(m => m.Login).ClientTemplate(@Html.ActionLink("#=Login#", "Infos", new { Id = "#=Id#" }).ToHtmlString());
            columns.Bound(m => m.Firstname);
            columns.Bound(m => m.Lastname);
            columns.Bound(m => m.SocietyName).ClientTemplate(@Html.ActionLink("#=SocietyName#", "SocietyInfos","Society",new { Id = "#=SocietyId#" }, null).ToHtmlString());
            columns.Bound(m => m.LastLoginDate).Format("{0:dd/MM/yyyy HH:mm}");
            //columns.Bound(m => m.Roles)
            //    .ClientTemplate("#= renderMultiSelectText(data.Roles, 'Name') #")
            //    .Filterable(false);
            //columns.Bound(m => m.TypeStatut).Width(150);
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(r => r.Action("Read", "User", new { area = "Admin", IsBayer = false }))
            .Model(model =>
            {
                model.Id(c => c.Login);
                model.Field(c => c.Statut).Editable(false);
            })
            .PageSize(10)
        )
        .Pageable(p => p.Refresh(true))
        .Filterable()
        .Sortable()
    )
    </div>
</div>